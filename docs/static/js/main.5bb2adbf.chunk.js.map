{"version":3,"sources":["images/mountains.png","components/Filters.js","components/CitiesList.js","components/SelItems.js","components/SelList.js","App.js","index.js"],"names":["module","exports","Filters","props","placeholderText","getUserInput","clearKey","className","placeholder","type","onChange","onKeyDown","CitiesList","cities","userInput","getSelected","allSelected","selected","getAllSelected","filteredCities","filter","city","name","toUpperCase","includes","checked","length","map","key","id","value","item","src","mountains","alt","chineseName","SelItems","clearAllSelected","onClick","SelList","closeSelected","data-id","App","state","bind","event","currentTarget","this","setState","selectedValue","futureSelected","find","prevState","newSelected","result","findIndex","push","splice","allCities","selectedID","getAttribute","index","which","keyCode","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bb2adbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountains.3cd6e383.png\";","import React from 'react';\nimport '../styles/Filters.scss';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n\n\tconst { placeholderText, getUserInput, clearKey } = props;\n\n\treturn (\n\t\t<div className=\"filters\">\n\t\t\t<i className=\"fas fa-search form-control\"></i>\n\t\t\t<input placeholder={placeholderText} type=\"text\" className=\"userInput\" onChange={getUserInput} onKeyDown={clearKey}/>\n\t\t</div>\n\t);\n\n};\n\nFilters.propTypes = {\n\tplaceholderText: PropTypes.string.isRequired,\n\tgetUserInput: PropTypes.func.isRequired\n};\n\nexport default Filters;","import React from 'react';\nimport mountains from '../images/mountains.png';\nimport '../styles/CitiesList.scss';\nimport PropTypes from 'prop-types';\n\nconst CitiesList = props => {\n\n\tconst { cities, userInput, getSelected, allSelected, selected, getAllSelected } = props;\n\t\n\tconst filteredCities = cities\n\t\t.filter(city => {\n\t\t\treturn city.name.toUpperCase().includes(userInput.toUpperCase())\n\t\t});\n\n\treturn (\n\t\t<div className=\"containerList\">\n\t\t\t<div className=\"totItems\">\n\t\t\t\t<input type=\"checkbox\" className=\"checkItems\" onChange={getAllSelected} checked={allSelected === true} />\n\t\t\t\t<p className=\"items\">{filteredCities.length} items</p>\n\t\t\t</div>\n\t\t\t<ul className=\"cities-list\">\n\t\t\t\t{filteredCities\n\t\t\t\t\t.map(city => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"cities-item cities-hover\" key={city.id} >\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"myCheck\" onChange={getSelected} value={city.id} checked={selected.filter(item => (item.name === city.name)).length === 1} />\n\t\t\t\t\t\t\t\t<img src={mountains} alt=\"mountains\" className=\"logo\" />\n\t\t\t\t\t\t\t\t<div className=\"names\">\n\t\t\t\t\t\t\t\t\t<p className=\"city-name\">{city.name}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"chinese-name\">{city.chineseName}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t);\n\n};\n\nCitiesList.propTypes = {\n\tuserInput: PropTypes.string.isRequired,\n\tcities: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tgetSelected: PropTypes.func.isRequired,\n\tallSelected: PropTypes.bool,\n\tselected: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tgetAllSelected: PropTypes.func.isRequired\n};\n\nexport default CitiesList;","import React from 'react';\nimport '../styles/SelItems.scss'\nimport PropTypes from 'prop-types';\n\nconst SelItems = props => {\n\tconst { selected, clearAllSelected } = props;\n\treturn (\n\t\t<div className=\"selItems\">\n\t\t\t<p className=\"selected-items\">{selected.length} items</p>\n\t\t\t<button className=\"clear\" onClick={clearAllSelected}>clear</button>\n\t\t</div>\n\t);\n\n};\n\nSelItems.propTypes = {\n\tselected: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tclearAllSelected: PropTypes.func.isRequired\n};\n\nexport default SelItems;","import React from 'react';\nimport mountains from '../images/mountains.png';\nimport '../styles/SelList.scss';\nimport PropTypes from 'prop-types';\n\nconst SelList = props => {\n\tconst { selected, closeSelected } = props;\n\treturn (\n\t\t<div className=\"selList\">\n\t\t\t<ul className=\"cities-list\">\n\t\t\t\t{selected\n\t\t\t\t\t.map(city => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"cities-item\" key={city.id} >\n\t\t\t\t\t\t\t\t<img src={mountains} alt=\"mountains\" className=\"logo\" />\n\t\t\t\t\t\t\t\t<div className=\"names\">\n\t\t\t\t\t\t\t\t\t<p className=\"city-name\">{city.name}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"chinese-name\">{city.chineseName}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button data-id={city.id} className=\"btn-clear\" onClick={closeSelected}>X</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t);\n\n};\n\nSelList.propTypes = {\n\tselected: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tcloseSelected: PropTypes.func.isRequired\n};\n\nexport default SelList;","import React from 'react';\nimport Filters from './components/Filters';\nimport cities from './services/cities.json';\nimport CitiesList from './components/CitiesList';\nimport SelItems from './components/SelItems';\nimport SelList from './components/SelList';\nimport './styles/app.scss';\n\nconst placeholderText = 'Search by name';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cities: cities.cities,\n      userInput: '',\n      selected: [],\n      allSelected: false\n    }\n\n    this.getUserInput = this.getUserInput.bind(this);\n    this.getSelected = this.getSelected.bind(this);\n    this.closeSelected = this.closeSelected.bind(this);\n    this.clearAllSelected = this.clearAllSelected.bind(this);\n    this.getAllSelected = this.getAllSelected.bind(this);\n    this.clearKey = this.clearKey.bind(this);\n  }\n\n  getUserInput(event) {\n    const value = event.currentTarget.value;\n    this.setState({\n      userInput: value\n    })\n  }\n\n  getSelected(event) {\n    const selectedValue = event.currentTarget.value;\n    const futureSelected = this.state.cities.find(item => item.id === selectedValue);\n\n    this.setState(prevState => {\n      const newSelected = [...prevState.selected];\n      const result = newSelected.findIndex(item => item.id === selectedValue);\n\n      if (result < 0) {\n        newSelected.push(futureSelected);\n        return {\n          selected: newSelected,\n        }\n      } else {\n        newSelected.splice(result, 1);\n        return {\n          selected: newSelected,\n          allSelected: false,\n        }\n      }\n\n    });\n  }\n\n  getAllSelected() {\n    if (this.state.allSelected === true) {\n      this.setState({\n        selected: [],\n        allSelected: false\n      });\n    } else {\n      const allCities = [];\n      for (let item of this.state.cities.filter((item => {\n        return item.name.toUpperCase().includes(this.state.userInput.toUpperCase())\n      }))) {\n        allCities.push(item);\n      }\n      this.setState({\n        selected: allCities,\n        allSelected: true\n      });\n\n    }\n  }\n\n  closeSelected(event) {\n    const selectedID = event.currentTarget.getAttribute('data-id');\n\n    if(this.state.allSelected === true) {\n      const index = this.state.selected.findIndex(item => \n        item.id === selectedID\n      );\n      const newSelected = [...this.state.selected];\n      newSelected.splice(index, 1);\n      this.setState({\n        selected: newSelected,\n        allSelected: false\n      });\n    } else {\n      const index = this.state.selected.findIndex(item => \n        item.id === selectedID\n        );\n      const newSelected = [...this.state.selected];\n      newSelected.splice(index, 1);\n      this.setState({\n        selected: newSelected\n      });\n    }\n\n  }\n\n  clearAllSelected() {\n    this.setState({\n      selected: [],\n      allSelected: false\n    });\n  }\n\n  clearKey(event) {\n    const codigo = event.which || event.keyCode;\n    if(codigo === 8) {\n      this.setState({\n        allSelected: false\n      });\n    }\n  }\n\n  render() {\n    const { getUserInput, getSelected, getAllSelected, clearAllSelected, closeSelected, clearKey } = this;\n    const { cities, userInput, allSelected, selected } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Cities of China</h1>\n\n        <div className=\"app__container\">\n          <div className=\"container__list\">\n            <Filters\n              placeholderText={placeholderText}\n              getUserInput={getUserInput}\n              clearKey={clearKey}\n            />\n            <CitiesList\n              cities={cities}\n              userInput={userInput}\n              getSelected={getSelected}\n              allSelected={allSelected}\n              selected={selected}\n              getAllSelected={getAllSelected}\n            />\n\n          </div>\n          <div className=\"container__selected\">\n            <SelItems\n              selected={selected}\n              clearAllSelected={clearAllSelected}\n            />\n            <SelList\n              selected={selected}\n              closeSelected={closeSelected}\n            />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}